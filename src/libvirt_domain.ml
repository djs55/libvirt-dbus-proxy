(* This file should be autogenerated somehow: the aim is to generate
   the to/from sexp functions as if we had typed 'with sexp' in
   Libvirt.Event.* *)

open Sexplib.Std

  include Libvirt.Domain

let __state_of_sexp__ : Sexplib.Sexp.t -> state =
  let _tp_loc = "foo.ml.state"
  in
    function
    | Sexplib.Sexp.Atom ("infoNoState" | "InfoNoState") -> InfoNoState
    | Sexplib.Sexp.Atom ("infoRunning" | "InfoRunning") -> InfoRunning
    | Sexplib.Sexp.Atom ("infoBlocked" | "InfoBlocked") -> InfoBlocked
    | Sexplib.Sexp.Atom ("infoPaused" | "InfoPaused") -> InfoPaused
    | Sexplib.Sexp.Atom ("infoShutdown" | "InfoShutdown") -> InfoShutdown
    | Sexplib.Sexp.Atom ("infoShutoff" | "InfoShutoff") -> InfoShutoff
    | Sexplib.Sexp.Atom ("infoCrashed" | "InfoCrashed") -> InfoCrashed
    | (Sexplib.Sexp.List
         (Sexplib.Sexp.Atom ("infoNoState" | "InfoNoState") :: _)
       as sexp) -> Sexplib.Conv_error.stag_no_args _tp_loc sexp
    | (Sexplib.Sexp.List
         (Sexplib.Sexp.Atom ("infoRunning" | "InfoRunning") :: _)
       as sexp) -> Sexplib.Conv_error.stag_no_args _tp_loc sexp
    | (Sexplib.Sexp.List
         (Sexplib.Sexp.Atom ("infoBlocked" | "InfoBlocked") :: _)
       as sexp) -> Sexplib.Conv_error.stag_no_args _tp_loc sexp
    | (Sexplib.Sexp.List
         (Sexplib.Sexp.Atom ("infoPaused" | "InfoPaused") :: _)
       as sexp) -> Sexplib.Conv_error.stag_no_args _tp_loc sexp
    | (Sexplib.Sexp.List
         (Sexplib.Sexp.Atom ("infoShutdown" | "InfoShutdown") :: _)
       as sexp) -> Sexplib.Conv_error.stag_no_args _tp_loc sexp
    | (Sexplib.Sexp.List
         (Sexplib.Sexp.Atom ("infoShutoff" | "InfoShutoff") :: _)
       as sexp) -> Sexplib.Conv_error.stag_no_args _tp_loc sexp
    | (Sexplib.Sexp.List
         (Sexplib.Sexp.Atom ("infoCrashed" | "InfoCrashed") :: _)
       as sexp) -> Sexplib.Conv_error.stag_no_args _tp_loc sexp
    | (Sexplib.Sexp.List (Sexplib.Sexp.List _ :: _) as sexp) ->
        Sexplib.Conv_error.nested_list_invalid_sum _tp_loc sexp
    | (Sexplib.Sexp.List [] as sexp) ->
        Sexplib.Conv_error.empty_list_invalid_sum _tp_loc sexp
    | sexp -> Sexplib.Conv_error.unexpected_stag _tp_loc sexp
  
let _ = __state_of_sexp__
  
let state_of_sexp : Sexplib.Sexp.t -> state =
  fun sexp -> __state_of_sexp__ sexp
  
let _ = state_of_sexp
  
let sexp_of_state : state -> Sexplib.Sexp.t =
  function
  | InfoNoState -> Sexplib.Sexp.Atom "InfoNoState"
  | InfoRunning -> Sexplib.Sexp.Atom "InfoRunning"
  | InfoBlocked -> Sexplib.Sexp.Atom "InfoBlocked"
  | InfoPaused -> Sexplib.Sexp.Atom "InfoPaused"
  | InfoShutdown -> Sexplib.Sexp.Atom "InfoShutdown"
  | InfoShutoff -> Sexplib.Sexp.Atom "InfoShutoff"
  | InfoCrashed -> Sexplib.Sexp.Atom "InfoCrashed"
